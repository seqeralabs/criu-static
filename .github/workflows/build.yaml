name: criu-static build
on:
  # Run on push events
  push:
    # Only run when code is pushed to these branches
    branches:
      - "master"
    # Avoid running when tags are pushed
    tags-ignore:
      - "**"
    # Avoid running when certain files are modified
    paths-ignore:
      - "docs/**"

  # Run on pull request events
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

# avoid running multiple copies of the same workflow in parallel
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-amd64:
    name: Build criu(amd64)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Build criu
        uses: docker/build-push-action@v6
        with:
          context: .
          outputs: type=local,dest=./output
          file: Dockerfile
          push: false
          load: true
          tags: "criu-build-image-amd64"
          platforms: "linux/amd64"
          cache-from: type=gha,scope=criu-build-image-amd64
          cache-to: type=gha,mode=max,scope=criu-build-image-amd64

      - name: Upload amd64 artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: criu-amd64
          path: ./output

  build-arm64:
    name: Build criu(arm64)
    runs-on: ubuntu-24.04-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Build criu
        uses: docker/build-push-action@v6
        with:
          context: .
          outputs: type=local,dest=./output
          file: Dockerfile
          push: false
          load: true
          tags: "criu-build-image-arm64"
          platforms: "linux/arm64"
          cache-from: type=gha,scope=criu-build-image-arm64
          cache-to: type=gha,mode=max,scope=criu-build-image-arm64

      - name: Upload arm64 artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: criu-arm64
          path: ./output

  release:
    name: Release
    if: "contains(github.event.head_commit.message, '[release]') && ( github.event.ref=='refs/heads/master' || contains(github.event.ref, 'release') )"
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Download build artifacts (amd64)
        uses: actions/download-artifact@v4.3.0
        with:
          pattern: criu-amd64
          path: dist
    
      - name: Download build artifacts (arm64)
        uses: actions/download-artifact@v4.3.0
        with:
          pattern: criu-arm64
          path: dist

      - name: Setup Java for JReleaser
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Version
        id: version
        run: |
          VERSION=$(cmake --preset static-release -LA  | grep CRIU_VERSION | cut -d'=' -f2)
          echo "VERSION = $VERSION"
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Run JReleaser
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_PROJECT_VERSION: ${{ steps.version.outputs.VERSION }}
